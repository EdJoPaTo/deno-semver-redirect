name: Rust

on:
  push:
  pull_request:

jobs:
  clippy:
    name: Clippy ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: clippy

      - name: Run clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --verbose --locked --all-targets --all-features -- -D clippy::all -D clippy::pedantic

  rustfmt:
    name: Rustfmt
    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          components: rustfmt

      - name: Check format
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: -- --check --verbose

  test:
    name: Test ${{ matrix.os }} ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}
    needs: clippy
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - macOS-latest
          - windows-latest
        toolchain:
          - stable
          - nightly
    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: ${{ matrix.toolchain }}
          profile: minimal
          override: true

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --verbose --locked --all-features

  release:
    name: Release ${{ matrix.triple }}
    runs-on: ${{ matrix.os }}
    needs: test
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            triple: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            triple: arm-unknown-linux-gnueabihf
          - os: ubuntu-latest
            triple: armv7-unknown-linux-gnueabihf
          - os: ubuntu-latest
            triple: aarch64-unknown-linux-gnu
          - os: macOS-latest
            triple: x86_64-apple-darwin
          - os: macOS-latest
            triple: aarch64-apple-darwin
          - os: windows-latest
            triple: x86_64-pc-windows-msvc

    steps:
      - uses: actions/checkout@v2

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          profile: minimal
          target: ${{ matrix.triple }}

      - name: Build release
        uses: actions-rs/cargo@v1
        env:
          # TODO: Remove this once it's the default
          SDKROOT: /Library/Developer/CommandLineTools/SDKs/MacOSX11.1.sdk
        with:
          command: build
          args: --release --verbose --locked --target ${{ matrix.triple }}
          use-cross: ${{ runner.os == 'Linux' && matrix.triple != 'x86_64-unknown-linux-gnu' }}

      - name: Pack release (-nix)
        if: runner.os != 'Windows'
        run: |
          cd target/${{ matrix.triple }}/release
          tar -czvf ../../../deno-semver-redirect-${{ matrix.triple }}.tar.gz deno-semver-redirect
          cd -
      - name: Pack release (windows)
        if: runner.os == 'Windows'
        run: |
          cd target/${{ matrix.triple }}/release
          7z a ../../../deno-semver-redirect-${{ matrix.triple }}.zip deno-semver-redirect.exe
          cd -

      - name: Upload Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.triple }}
          path: |
            *.zip
            *.tar.gz

      - name: GH Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          files: |
            *.zip
            *.tar.gz
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
